Código:

{x >= 0}

    y := 1;
    z := 0;
    while (z != x) do
        z := z+1;
        y := y*z;

{y = x!}

1)

Testando algumas iterações do loop:

x = 4:
0: x = 4, y = 1, z = 0;
1: x = 4, y = 1, z = 1;
2: x = 4, y = 2, z = 2;
3: x = 4, y = 6, z = 3;
4: x = 4, y = 24, z = 4;

Em toda iteração, y = z!.

-------------------------------------------------------------------------

Validando o comando while com o invariante acima:
{y = z! && z != x} (i)
{y*(z+1) = (z+1)!}
    z := z+1;
{y*z = z!}
    y := y*z;
{y = z!}

i)
Se
 - y = z!;
 - z != x;
então
 - y*(z+1) = (z+1)! === y = (z+1)!/(z+1) === y = z!; (OK)

 Logo, como essa tripla de Hoare é válida, então todo o trecho de while é válida sob correção parcial.

--------------------------------------------------------------------------

 Assim, finalizando:

{x >= 0} (iii)
{1 = 0!}
    y := 1;
{y = 0!}
    z := 0;
{y = z!}
    while (z != x) do
        z := z+1;
        y := y*z;
{y = z! && z = x} (ii)
{y = x!}

ii)
Se
 - y = z!;
 - z = x;
então
 - y = x!. (OK)

iii)
Se
 - x >= 0;
então
 - 1 = 0!; (OK)

2)

Para correção total, precisa-se determinar um variante e provar que ele completa a prova do loop.

Testando o variante {x-z}, e adicionando {x ≥ z} no invariante, observa-se que:

{y = z! && x ≥ z && x = u+z && z != x} (i)
{y*(z+1) = (z+1)! && x ≥ z+1 && x < u+z+1}
        z := z+1;
{y*z = z! && x ≥ z && x < u+z}
        y := y*z;
{y = z! && x ≥ z && x < u+z}

i)
Se
 - y = z!;
 - x ≥ z;
 - x = u+z;
 - z != x;
então
 - y*(z+1) = (z+1)! === y = z!; (OK)
 - x ≥ z+1; (OK)
 - x < u+z+1. (OK)

Logo, como essa tripla de Hoare é válida, então todo o trecho de while é válida sob correção total.

--------------------------------------------------------------------------

O resto do código segue da seguinte forma:

{x ≥ 0}          (iii)
{1 = 0! && x ≥ 0}
    y := 1;
{y = 0! && x ≥ 0}
    z := 0;
{y = z! && x ≥ z}
    while (z != x) do
        z := z+1;
        y := y*z;
{y = z! && x ≥ z && z = x} (ii)
{y = x!}

ii)
Se
 - y = z!;
 - x ≥ z;
 - z = x;
então
 - y = x!. (OK)

iii)
Se
 - x ≥ 0
então
 - 1 = 0!; (OK)
 - x ≥ 0. (OK)